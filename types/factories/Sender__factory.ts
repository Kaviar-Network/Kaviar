/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sender, SenderInterface } from "../Sender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasReceiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620012cc380380620012cc8339818101604052810190620000379190620001d4565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a0576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060a0818152505050505062000230565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001618262000134565b9050919050565b620001738162000154565b81146200017f57600080fd5b50565b600081519050620001938162000168565b92915050565b6000819050919050565b620001ae8162000199565b8114620001ba57600080fd5b50565b600081519050620001ce81620001a3565b92915050565b600080600060608486031215620001f057620001ef6200012f565b5b6000620002008682870162000182565b9350506020620002138682870162000182565b92505060406200022686828701620001bd565b9150509250925092565b60805160a05161105a62000272600039600081816103eb015261062601526000818161015d015281816101bd015281816102e80152610520015261105a6000f3fe6080604052600436106100555760003560e01c8063116191b61461005a57806317cc915c146100855780631a98b2e0146100c257806349160658146100eb5780638bca6d1614610114578063c9ebfb651461013f575b600080fd5b34801561006657600080fd5b5061006f61015b565b60405161007c9190610711565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a7919061076c565b61017f565b6040516100b991906107b4565b60405180910390f35b3480156100ce57600080fd5b506100e960048036038101906100e491906108c0565b61019f565b005b3480156100f757600080fd5b50610112600480360381019061010d91906109d0565b6102ca565b005b34801561012057600080fd5b506101296103e9565b6040516101369190610aa8565b60405180910390f35b61015960048036038101906101549190610ac3565b61040d565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020528060005260406000206000915054906101000a900460ff1681565b600085856040516101b1929190610b97565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b815260040161022499989796959493929190610c0e565b602060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610cb6565b6102ac576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102bd8a8a8a8a8a8a8a8a8a6105c1565b5050505050505050505050565b600082826040516102dc929190610b97565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b815260040161034996959493929190610ce3565b602060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610cb6565b6103d1576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103df8787878787876105cc565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104156105d4565b61041d610624565b60003411610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610d86565b60405180910390fd5b6000856040516020016104739190610da6565b6040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c93e3bb34308888888888336040518963ffffffff1660e01b81526004016104ec9796959493929190610e6a565b6000604051808303818588803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c92115f86868686866040518663ffffffff1660e01b815260040161057f959493929190610ed6565b600060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b50505050506105ba610688565b5050505050565b505050505050505050565b505050505050565b6002600054141561061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610f72565b60405180910390fd5b6002600081905550565b7f00000000000000000000000000000000000000000000000000000000000000003414610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90611004565b60405180910390fd5b565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106d76106d26106cd84610692565b6106b2565b610692565b9050919050565b60006106e9826106bc565b9050919050565b60006106fb826106de565b9050919050565b61070b816106f0565b82525050565b60006020820190506107266000830184610702565b92915050565b600080fd5b600080fd5b6000819050919050565b61074981610736565b811461075457600080fd5b50565b60008135905061076681610740565b92915050565b6000602082840312156107825761078161072c565b5b600061079084828501610757565b91505092915050565b60008115159050919050565b6107ae81610799565b82525050565b60006020820190506107c960008301846107a5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107f4576107f36107cf565b5b8235905067ffffffffffffffff811115610811576108106107d4565b5b60208301915083600182028301111561082d5761082c6107d9565b5b9250929050565b60008083601f84011261084a576108496107cf565b5b8235905067ffffffffffffffff811115610867576108666107d4565b5b602083019150836001820283011115610883576108826107d9565b5b9250929050565b6000819050919050565b61089d8161088a565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b60008060008060008060008060008060c08b8d0312156108e3576108e261072c565b5b60006108f18d828e01610757565b9a505060208b013567ffffffffffffffff81111561091257610911610731565b5b61091e8d828e016107de565b995099505060408b013567ffffffffffffffff81111561094157610940610731565b5b61094d8d828e016107de565b975097505060608b013567ffffffffffffffff8111156109705761096f610731565b5b61097c8d828e01610834565b955095505060808b013567ffffffffffffffff81111561099f5761099e610731565b5b6109ab8d828e016107de565b935093505060a06109be8d828e016108ab565b9150509295989b9194979a5092959850565b60008060008060008060006080888a0312156109ef576109ee61072c565b5b60006109fd8a828b01610757565b975050602088013567ffffffffffffffff811115610a1e57610a1d610731565b5b610a2a8a828b016107de565b9650965050604088013567ffffffffffffffff811115610a4d57610a4c610731565b5b610a598a828b016107de565b9450945050606088013567ffffffffffffffff811115610a7c57610a7b610731565b5b610a888a828b01610834565b925092505092959891949750929550565b610aa28161088a565b82525050565b6000602082019050610abd6000830184610a99565b92915050565b600080600080600060608688031215610adf57610ade61072c565b5b6000610aed88828901610757565b955050602086013567ffffffffffffffff811115610b0e57610b0d610731565b5b610b1a888289016107de565b9450945050604086013567ffffffffffffffff811115610b3d57610b3c610731565b5b610b49888289016107de565b92509250509295509295909350565b600081905092915050565b82818337600083830152505050565b6000610b7e8385610b58565b9350610b8b838584610b63565b82840190509392505050565b6000610ba4828486610b72565b91508190509392505050565b610bb981610736565b82525050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b6000610bed8385610bbf565b9350610bfa838584610b63565b610c0383610bd0565b840190509392505050565b600060c082019050610c23600083018c610bb0565b8181036020830152610c36818a8c610be1565b90508181036040830152610c4b81888a610be1565b9050610c5a6060830187610bb0565b8181036080830152610c6d818587610be1565b9050610c7c60a0830184610a99565b9a9950505050505050505050565b610c9381610799565b8114610c9e57600080fd5b50565b600081519050610cb081610c8a565b92915050565b600060208284031215610ccc57610ccb61072c565b5b6000610cda84828501610ca1565b91505092915050565b6000608082019050610cf86000830189610bb0565b8181036020830152610d0b818789610be1565b90508181036040830152610d20818587610be1565b9050610d2f6060830184610bb0565b979650505050505050565b7f476173207061796d656e74206973207265717569726564000000000000000000600082015250565b6000610d70601783610bbf565b9150610d7b82610d3a565b602082019050919050565b60006020820190508181036000830152610d9f81610d63565b9050919050565b6000602082019050610dbb6000830184610bb0565b92915050565b6000610dcc82610692565b9050919050565b610ddc81610dc1565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e1c578082015181840152602081019050610e01565b83811115610e2b576000848401525b50505050565b6000610e3c82610de2565b610e468185610ded565b9350610e56818560208601610dfe565b610e5f81610bd0565b840191505092915050565b600060a082019050610e7f600083018a610dd3565b8181036020830152610e9281888a610be1565b90508181036040830152610ea7818688610be1565b90508181036060830152610ebb8185610e31565b9050610eca6080830184610dd3565b98975050505050505050565b60006060820190508181036000830152610ef1818789610be1565b90508181036020830152610f06818587610be1565b90508181036040830152610f1a8184610e31565b90509695505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f5c601f83610bbf565b9150610f6782610f26565b602082019050919050565b60006020820190508181036000830152610f8b81610f4f565b9050919050565b7f506c656173652073656e6420606d697844656e6f6d696e6174696f6e6020455460008201527f4820616c6f6e672077697468207472616e73616374696f6e0000000000000000602082015250565b6000610fee603883610bbf565b9150610ff982610f92565b604082019050919050565b6000602082019050818103600083015261101d81610fe1565b905091905056fea26469706673582212201da383175126a3147e6767da814e3d43b134962d1c21d0bd40af140e35188d5f64736f6c63430008090033";

export class Sender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    gateway_: string,
    gasReceiver_: string,
    _denomination: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sender> {
    return super.deploy(
      gateway_,
      gasReceiver_,
      _denomination,
      overrides || {}
    ) as Promise<Sender>;
  }
  getDeployTransaction(
    gateway_: string,
    gasReceiver_: string,
    _denomination: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      gateway_,
      gasReceiver_,
      _denomination,
      overrides || {}
    );
  }
  attach(address: string): Sender {
    return super.attach(address) as Sender;
  }
  connect(signer: Signer): Sender__factory {
    return super.connect(signer) as Sender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderInterface {
    return new utils.Interface(_abi) as SenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sender {
    return new Contract(address, _abi, signerOrProvider) as Sender;
  }
}
