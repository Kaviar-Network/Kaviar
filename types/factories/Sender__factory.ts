/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sender, SenderInterface } from "../Sender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasReceiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_axelarGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [],
    name: "axelarGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620013a8380380620013a88339818101604052810190620000379190620001dc565b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a0576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600160008190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160a0818152505080600181905550505050506200024e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000169826200013c565b9050919050565b6200017b816200015c565b81146200018757600080fd5b50565b6000815190506200019b8162000170565b92915050565b6000819050919050565b620001b681620001a1565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b60008060008060808587031215620001f957620001f862000137565b5b600062000209878288016200018a565b94505060206200021c878288016200018a565b93505060406200022f87828801620001c5565b92505060606200024287828801620001c5565b91505092959194509250565b60805160a051611118620002906000396000818161043101526106740152600081816101a3015281816102030152818161032e015261056e01526111186000f3fe6080604052600436106100705760003560e01c8063491606581161004e57806349160658146101065780638bca6d161461012f578063ac34241f1461015a578063c9ebfb651461018557610070565b8063116191b61461007557806317cc915c146100a05780631a98b2e0146100dd575b600080fd5b34801561008157600080fd5b5061008a6101a1565b604051610097919061076c565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c291906107c7565b6101c5565b6040516100d4919061080f565b60405180910390f35b3480156100e957600080fd5b5061010460048036038101906100ff919061091b565b6101e5565b005b34801561011257600080fd5b5061012d60048036038101906101289190610a2b565b610310565b005b34801561013b57600080fd5b5061014461042f565b6040516101519190610b03565b60405180910390f35b34801561016657600080fd5b5061016f610453565b60405161017c9190610b03565b60405180910390f35b61019f600480360381019061019a9190610b1e565b610459565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528060005260406000206000915054906101000a900460ff1681565b600085856040516101f7929190610bf2565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b815260040161026a99989796959493929190610c69565b602060405180830381600087803b15801561028457600080fd5b505af1158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610d11565b6102f2576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103038a8a8a8a8a8a8a8a8a61060f565b5050505050505050505050565b60008282604051610322929190610bf2565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b815260040161038f96959493929190610d3e565b602060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e19190610d11565b610417576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042587878787878761061a565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b610461610622565b610469610672565b600034116104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390610de1565b60405180910390fd5b6000856040516020016104bf9190610e01565b6040516020818303038152906040529050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c93e3bb600154308888888888336040518963ffffffff1660e01b815260040161053a9796959493929190610ec5565b6000604051808303818588803b15801561055357600080fd5b505af1158015610567573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c92115f86868686866040518663ffffffff1660e01b81526004016105cd959493929190610f31565b600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b50505050506106086106e3565b5050505050565b505050505050505050565b505050505050565b60026000541415610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90610fcd565b60405180910390fd5b6002600081905550565b7f0000000000000000000000000000000000000000000000000000000000000000600154346106a1919061101c565b146106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d8906110c2565b60405180910390fd5b565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061073261072d610728846106ed565b61070d565b6106ed565b9050919050565b600061074482610717565b9050919050565b600061075682610739565b9050919050565b6107668161074b565b82525050565b6000602082019050610781600083018461075d565b92915050565b600080fd5b600080fd5b6000819050919050565b6107a481610791565b81146107af57600080fd5b50565b6000813590506107c18161079b565b92915050565b6000602082840312156107dd576107dc610787565b5b60006107eb848285016107b2565b91505092915050565b60008115159050919050565b610809816107f4565b82525050565b60006020820190506108246000830184610800565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261084f5761084e61082a565b5b8235905067ffffffffffffffff81111561086c5761086b61082f565b5b60208301915083600182028301111561088857610887610834565b5b9250929050565b60008083601f8401126108a5576108a461082a565b5b8235905067ffffffffffffffff8111156108c2576108c161082f565b5b6020830191508360018202830111156108de576108dd610834565b5b9250929050565b6000819050919050565b6108f8816108e5565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b60008060008060008060008060008060c08b8d03121561093e5761093d610787565b5b600061094c8d828e016107b2565b9a505060208b013567ffffffffffffffff81111561096d5761096c61078c565b5b6109798d828e01610839565b995099505060408b013567ffffffffffffffff81111561099c5761099b61078c565b5b6109a88d828e01610839565b975097505060608b013567ffffffffffffffff8111156109cb576109ca61078c565b5b6109d78d828e0161088f565b955095505060808b013567ffffffffffffffff8111156109fa576109f961078c565b5b610a068d828e01610839565b935093505060a0610a198d828e01610906565b9150509295989b9194979a5092959850565b60008060008060008060006080888a031215610a4a57610a49610787565b5b6000610a588a828b016107b2565b975050602088013567ffffffffffffffff811115610a7957610a7861078c565b5b610a858a828b01610839565b9650965050604088013567ffffffffffffffff811115610aa857610aa761078c565b5b610ab48a828b01610839565b9450945050606088013567ffffffffffffffff811115610ad757610ad661078c565b5b610ae38a828b0161088f565b925092505092959891949750929550565b610afd816108e5565b82525050565b6000602082019050610b186000830184610af4565b92915050565b600080600080600060608688031215610b3a57610b39610787565b5b6000610b48888289016107b2565b955050602086013567ffffffffffffffff811115610b6957610b6861078c565b5b610b7588828901610839565b9450945050604086013567ffffffffffffffff811115610b9857610b9761078c565b5b610ba488828901610839565b92509250509295509295909350565b600081905092915050565b82818337600083830152505050565b6000610bd98385610bb3565b9350610be6838584610bbe565b82840190509392505050565b6000610bff828486610bcd565b91508190509392505050565b610c1481610791565b82525050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b6000610c488385610c1a565b9350610c55838584610bbe565b610c5e83610c2b565b840190509392505050565b600060c082019050610c7e600083018c610c0b565b8181036020830152610c91818a8c610c3c565b90508181036040830152610ca681888a610c3c565b9050610cb56060830187610c0b565b8181036080830152610cc8818587610c3c565b9050610cd760a0830184610af4565b9a9950505050505050505050565b610cee816107f4565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b600060208284031215610d2757610d26610787565b5b6000610d3584828501610cfc565b91505092915050565b6000608082019050610d536000830189610c0b565b8181036020830152610d66818789610c3c565b90508181036040830152610d7b818587610c3c565b9050610d8a6060830184610c0b565b979650505050505050565b7f476173207061796d656e74206973207265717569726564000000000000000000600082015250565b6000610dcb601783610c1a565b9150610dd682610d95565b602082019050919050565b60006020820190508181036000830152610dfa81610dbe565b9050919050565b6000602082019050610e166000830184610c0b565b92915050565b6000610e27826106ed565b9050919050565b610e3781610e1c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e77578082015181840152602081019050610e5c565b83811115610e86576000848401525b50505050565b6000610e9782610e3d565b610ea18185610e48565b9350610eb1818560208601610e59565b610eba81610c2b565b840191505092915050565b600060a082019050610eda600083018a610e2e565b8181036020830152610eed81888a610c3c565b90508181036040830152610f02818688610c3c565b90508181036060830152610f168185610e8c565b9050610f256080830184610e2e565b98975050505050505050565b60006060820190508181036000830152610f4c818789610c3c565b90508181036020830152610f61818587610c3c565b90508181036040830152610f758184610e8c565b90509695505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610fb7601f83610c1a565b9150610fc282610f81565b602082019050919050565b60006020820190508181036000830152610fe681610faa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611027826108e5565b9150611032836108e5565b92508282101561104557611044610fed565b5b828203905092915050565b7f506c656173652073656e6420606d697844656e6f6d696e6174696f6e6020455460008201527f4820616c6f6e672077697468207472616e73616374696f6e0000000000000000602082015250565b60006110ac603883610c1a565b91506110b782611050565b604082019050919050565b600060208201905081810360008301526110db8161109f565b905091905056fea26469706673582212200f8d1019c0ddb8d481c2b4e46a53058f032bfb529c7dcd776799a3c6dc1d583c64736f6c63430008090033";

export class Sender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    gateway_: string,
    gasReceiver_: string,
    _denomination: BigNumberish,
    _axelarGas: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sender> {
    return super.deploy(
      gateway_,
      gasReceiver_,
      _denomination,
      _axelarGas,
      overrides || {}
    ) as Promise<Sender>;
  }
  getDeployTransaction(
    gateway_: string,
    gasReceiver_: string,
    _denomination: BigNumberish,
    _axelarGas: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      gateway_,
      gasReceiver_,
      _denomination,
      _axelarGas,
      overrides || {}
    );
  }
  attach(address: string): Sender {
    return super.attach(address) as Sender;
  }
  connect(signer: Signer): Sender__factory {
    return super.connect(signer) as Sender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderInterface {
    return new utils.Interface(_abi) as SenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sender {
    return new Contract(address, _abi, signerOrProvider) as Sender;
  }
}
